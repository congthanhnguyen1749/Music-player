@import "./global";

/* – Dùng để viết css cho các đối tượng trong trang web.... */

// slide
$t: 2.5s;
$e1: cubic-bezier(0.8, 0, 0.1, 1);
$e2: cubic-bezier(0.6, 0.04, 0.98, 0.335);
$er: linear;

$color: hsl(15, 75%, 40%);
$font: "Abril Fatface", sans-serif;

$slides: 4;
$images: url(../assets/Tuanhung/tieu-su-tuan-hung.jpeg)
  url(../assets/Tuanhung/ca-si-ho-quang-hieu-tro-thanh-dai-su-thuong-hieu-cua-thuc-son-4d-chon-mat-gui-vang-game-quoc-dan-la-phai-chon-danh-hai-quoc-dan.jpeg)
  url(../assets/Tuanhung/sontung.webp) url(../assets/Tuanhung/chidân.jpeg);

.untitled {
  position: absolute;
  height: 100%;
  width: 100%;
  @keyframes rotateHue {
    0% {
      filter: hue-rotate(0deg);
    }
    20% {
      filter: hue-rotate(0deg);
    }
    25% {
      filter: hue-rotate(90deg);
    }
    45% {
      filter: hue-rotate(90deg);
    }
    50% {
      filter: hue-rotate(180deg);
    }
    70% {
      filter: hue-rotate(180deg);
    }
    75% {
      filter: hue-rotate(270deg);
    }
    95% {
      filter: hue-rotate(270deg);
    }
    100% {
      filter: hue-rotate(360deg);
    }
  }
  animation: rotateHue infinite $t * $slides * 2 linear;
  animation-delay: $t/4;

  &__shutters {
    position: absolute;
    height: 150vmax;
    width: 150vmax;
    left: calc(50% - 75vmax);
    top: calc(50% - 75vmax);
    pointer-events: none;
    z-index: 2;
    @keyframes rotateFrame {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(180deg);
      }
    }
    animation: rotateFrame $t * 4 $er infinite;

    &:before,
    &:after {
      content: "";
      position: absolute;
      height: 100%;
      width: 100%;
      left: 50%;
      transform: translate3d(-50%, 0, 0);
      background-color: $color;
      pointer-events: auto;
    }
    &:before {
      bottom: 50%;
      @keyframes openTop {
        0% {
          transform: translate3d(-50%, 0, 0);
          animation-timing-function: $e1;
        }
        40% {
          transform: translate3d(-50%, -65vmax, 0);
          animation-timing-functon: $e2;
        }
        70% {
          transform: translate3d(-50%, -65vmax, 0);
          animation-timing-functon: $e2;
        }
        100% {
          transform: translate3d(-50%, 0, 0);
          animation-timing-function: $e2;
        }
      }
      animation: openTop $t * 2 infinite;
    }
    &:after {
      top: 50%;
      @keyframes openBottom {
        0% {
          transform: translate3d(-50%, 0, 0);
          animation-timing-function: $e1;
        }
        40% {
          transform: translate3d(-50%, 65vmax, 0);
          animation-timing-functon: $e2;
        }
        70% {
          transform: translate3d(-50%, 65vmax, 0);
          animation-timing-functon: $e2;
        }
        100% {
          transform: translate3d(-50%, 0, 0);
          animation-timing-function: $e2;
        }
      }
      animation: openBottom $t * 2 infinite;
    }
  }

  &__slides {
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    background-color: $color;
  }
  &__slide {
    position: absolute;
    height: 100%;
    width: 100%;
    opacity: 0;
    @keyframes showHideSlide {
      0% {
        opacity: 1;
        pointer-events: auto;
        z-index: 1;
      }
      #{100% / $slides} {
        opacity: 0;
        pointer-events: none;
        z-index: -1;
      }
      100% {
        opacity: 0;
        pointer-events: none;
        z-index: -1;
      }
    }
    animation: showHideSlide infinite $t * $slides * 2 steps(1);
    @for $i from 1 through $slides {
      &:nth-child(#{$i}) {
        animation-delay: $t * ($i - 1) * 2;
        .untitled__slideBg {
          background-image: nth($images, $i);
        }
      }
    }
  }
  &__slideBg {
    position: relative;
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    background-size: cover;
    background-position: center;
    background-color: $color;
    background-blend-mode: hard-light;
    opacity: 1;
    z-index: -1;
    @keyframes bgInOut {
      0% {
        transform: rotate(-45deg) scale(1.1);
        animation-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);
      }
      33% {
        transform: rotate(0deg);
      }
      50% {
        transform: rotate(0deg);
      }
      66% {
        transform: rotate(0deg);
        animation-timing-function: cubic-bezier(0.895, 0.03, 0.685, 0.22);
      }
      100% {
        transform: rotate(45deg) scale(0.9);
      }
    }
    animation: bgInOut $t * 4 -$t * 2 infinite;
  }
  &__slideContent {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
    color: white;
    font-family: $font;
    line-height: 0.8;
    letter-spacing: -0.025em;
    z-index: 2;
    opacity: 1;
    text-shadow: 0 0 0.5em rgba($color, 0.25);
    mix-blend-mode: lighten;
    span {
      display: block;
      font-size: 15vmin;
    }
  }
}
.button {
  font-family: "Roboto Mono", sans-serif;
  text-decoration: none;
  font-weight: 800;
  text-transform: uppercase;
  font-size: 2vmin;
  display: inline-block;
  position: relative;
  border: 3px solid white;
  box-shadow: -0.5vmin 0.5vmin 0 rgba(white, 0.5);
  background: transparent;
  margin-top: 5vmin;
  mix-blend-mode: lighten;
  color: white;
  padding: 2vmin 2vmin 1.8vmin 2vmin;
  letter-spacing: 0.1em;
  text-shadow: none;
  line-height: 1;
  transform: translate3d(0.5vmin, -0.5vmin, 0);
  transition: all 100ms linear;
  &:hover {
    transform: translate3d(1vmin, -1vmin, 0);
    box-shadow: -1vmin 1vmin 0 rgba(white, 0.5);
    background: white;
    color: black;
  }
  &:active {
    transform: translate3d(0px, 0px, 0);
    box-shadow: -0px 0px 0 rgba(white, 0.5);
  }
}

//toast

#toast {
	position: fixed;
	top: 32px;
	right: 32px;
	z-index: 999999;
  }
  
  .toast {
	display: flex;
	align-items: center;
	background-color: #fff;
	border-radius: 2px;
	padding: 15px 0;
	min-width: 400px;
	max-width: 450px;
	border-left: 4px solid;
	box-shadow: 0 5px 8px rgba(0, 0, 0, 0.08);
	transition: all linear 0.3s;
  }
  
  @keyframes slideInLeft {
	from {
	  opacity: 0;
	  transform: translateX(calc(100% + 32px));
	}
	to {
	  opacity: 1;
	  transform: translateX(0);
	}
  }
  
  @keyframes fadeOut {
	to {
	  opacity: 0;
	}
  }
  
  .toast--success {
	border-color: #47d864;
  }
  
  .toast--success .toast__icon {
	color: #47d864;
  }
  
  .toast--info {
	border-color: #2f86eb;
  }
  
  .toast--info .toast__icon {
	color: #2f86eb;
  }
  
  .toast--warning {
	border-color: #ffc021;
  }
  
  .toast--warning .toast__icon {
	color: #ffc021;
  }
  
  .toast--error {
	border-color: #99cac4;
  }
  
  .toast--error .toast__icon {
	color: #99cac4;
  }
  
  .toast + .toast {
	margin-top: 15px;
  }
  
  .toast__icon {
	font-size: 24px;
  }
  
  .toast__icon,
  .toast__close {
	padding: 0 16px;
  }
  
  .toast__body {
	flex-grow: 1;
  }
  
  .toast__title {
	font-size: 16px;
	font-weight: 600;
	color: #333;
  }
  
  .toast__msg {
	font-size: 14px;
	color: #888;
	margin-top: 6px;
	line-height: 1.5;
  }
  
  .toast__close {
	font-size: 20px;
	color: rgba(0, 0, 0, 0.3);
	cursor: pointer;
  }
  
  